<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE spec SYSTEM "http://www.cs.stolaf.edu/lib/SpecML/SpecML.dtd">
<?xml-stylesheet
   href="http://www.cs.stolaf.edu/lib/SpecML/SpecMLToHTML.xsl"
   type="text/xsl"?>

<spec>
<title>defstat class specification</title>
<header>This class models the defensive stats of a football team.</header>
<credits>XML version of specification written by Soren Knutson, Sunday, December 11, 2011</credits>

<class name="defstat">

<nosuperclass/>

<variables>
<var name="comp" type="float">The number of completions the defence give up.</var>
<var name="att" type="float">The number of passing attempts the player has against them.</var>
<var name="pyds" type="float">The number of passing yards the defence has given up.</var>
<var name="inter" type="float">The number of time the defence has intercepted the ball.</var>
<var name="sack" type="float">The number of times the defence has sack a QB</var>
<var name="rush" type="float">The number of rushing attempts made against the defence.</var>
<var name="ruyds" type="float">The number of rushing yards the defence has given up.</var>
<var name="fumb" type="float">The number of times the defence has caused a fumble.</var>
<var name="kickret" type="float">The number of kick returns the defence has.</var>
<var name="kickretyds" type="float">The number of return yards against the defence.</var>
<var name="puntret" type="float">The number of punt returns the defence have.</var>
<var name="puntretyds" type="float">The number of punt return yards the defence has for them.</var>
<var name="punt" type="float">The number of punts the defence has kicked.</var>
<var name="puntyds" type="float">The number of punting yards the defence has.</var>

</variables>

<constructors-list>

<constructor>
<desc>Default constructor</desc>
<noarguments />
<statechange>Does nothing.</statechange>
</constructor>

<constructor>
<desc>An ifstream constructor</desc>
<arguments>
<arg name="is" type="ifstream">A reference to an ifstream.</arg>
</arguments>
<statechange>All the defensive stats are read in and set to their appropriate variables. Can be done by initializing a stringstream and a string inside the constructor.</statechange>
</constructor>

</constructors-list>

<destructor>
<desc></desc>
<statechange></statechange>
</destructor>

<methods-list>

<method name="commpercent" returntype="float">
<desc>Returns the number of completions over the number of attempts.</desc>
<noarguments />
<statechange>none</statechange>
<return>Returns the number of completions over the number of attempts.</return>
</method>

<method name="ypcomp" returntype="float">
<desc>Yards per completion</desc>
<noarguments />
<statechange>none</statechange>
<return>Returns the number of receiving yards over the number of completions.</return>
</method>

<method name="interrate" returntype="float">
<desc>Interception rate</desc>
<noarguments />
<statechange>none</statechange>
<return>Returns the then number of interceptions over the number of attempts</return>
</method>

<method name="sackrate" returntype="float">
<desc>The percentage of time the QB is sacked</desc>
<noarguments />
<statechange>none</statechange>
<return>Returns the number of sacks over the number of attempts</return>
</method>

<method name="ypr" returntype="float">
<desc>Yards per rush</desc>
<noarguments />
<statechange>none</statechange>
<return>Returns the number of rushing yards over the number of rush attempts</return>
</method>

<method name="fumbrate" returntype="float">
<desc>The rate at which a player fumbles the ball to the other team.</desc>
<noarguments />
<statechange>none</statechange>
<return>Returns the number of fumbles the defence has caused over the summation of the completions the defence has allowed, the number of rush attempts, and the number of sacks.</return>
</method>


<method name="ypkret" returntype="float">
<desc>Yard per kick return.</desc>
<noarguments />
<statechange>None.</statechange>
<return>Returns the number of kick return yards over the number of kick returns.</return>
</method>

<method name="yppret" returntype="float">
<desc>Yards per punt return.</desc>
<noarguments />
<statechange>None.</statechange>
<return>Returns the number of punt return yards over the number of punt returns.</return>
</method>

<method name="ypp" returntype="float">
<desc>Yards per punt.</desc>
<noarguments />
<statechange>None.</statechange>
<return>Returns the number of punting yards over the number of punts.</return>
</method>



</methods-list>

</class>

</spec>
